@page "/dashboard"
@using ProjectBank.Infrastructure
@using ProjectBank.Core
@using ProjectBank.Core.EF.DTO
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>@title</PageTitle>

<head>
    <link rel="stylesheet" href="Dashboard.razor.css">
</head>

<div class="ProjectHeader">
    <h1 class="ProjectTitle">@title</h1>
    <!--Idea is to only show Status to the author of the project-->
    <div class="Status Public">
        <p>Public</p>
    </div>
</div>

<div class="Buffer_10"></div>   

<div class="DescriptionDisplay">
    <div class="DescriptionTitle">
        <p>Published by <span id="AuthorContainer">Author Name</span></p>
    </div>
    <div class="Description">
        <textarea readonly id="ProjectDescription">@Description</textarea>
        <button class="btn btn-info ContractButton" @onclick="@(() => ExpandedDescription())">@ExpandDescription</button>
    </div>
</div>

<div>
    <h2>Info</h2>
    <div>
        <h3>Target group</h3>
        <textarea>Target group here..</textarea>
    </div>
    <div>
        <h3>Tags</h3>
        <textarea>Tags...</textarea>
    </div>
</div>

<div>
    <h2>Participants</h2>
    <div>
        <h3>Supervisors</h3>
        <h5>Supervisor</h5>
        <textarea>Supervisors...</textarea>
        <div class="row">
            <div class="column">
                <label for="inputEmail" class="form-label">Invite a supervisor</label>
                <input type="email" class="form-control" id="inputEmail" placeholder="Email">
            </div>
            <div class="column">
                <button>Invite</button>
            </div>
        </div>
    </div>
    <div>
        <h3>Students</h3>
        <textarea>Students</textarea>
        <textarea>@ProjectId</textarea>
    </div>
</div>

<div>
    <h2>Related projects</h2>
    <button>Tap to see within target group</button>
    @if (project == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
            </tr>
        </thead>
        <tbody>    
                <tr>
                    <td>@project[0].Id</td>
                </tr>
           
        </tbody>
    </table>
}
</div>

@code {
    string title = "Project Title";
    string empty = string.Empty;
    string Description = "no description ";
    string description = string.Empty;
    string ExpandDescription = "Contract";
    
    private IProject[]? projects;
    
    [Parameter]
    public int? ProjectId {get; set;}

    ProjectDTO[] project;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            string Projectstr = "Hah work";
            //ProjectId = 1;
            project = await Http.GetFromJsonAsync<ProjectDTO[]>($"Project/Get/{Projectstr}");
        }
        catch (Exception exception)
        {
            Console.WriteLine(":((( {0}",exception.Message);
            //exception.Redirect();
        }
        this.description = project[0].Description;
        ExpandedDescription(false);
    }

    public void ExpandedDescription(bool IsExpanded){
        Console.WriteLine("pressed the button");
        if(IsExpanded) {
            this.Description = description;
            this.ExpandDescription = "Contract";
        }
        else {
            this.Description = description.Substring(0,3) + "...";
            this.ExpandDescription = "Expand";
        }
    }

    public void ExpandedDescription(){
        if(this.ExpandDescription == "Expand") ExpandedDescription(true);
        else ExpandedDescription(false);
    }
}